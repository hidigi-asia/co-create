const express = require("express");
const multer = require("multer");
const {
  S3Client,
  PutObjectCommand,
  GetObjectCommand,
  DeleteObjectCommand,
} = require("@aws-sdk/client-s3");

const app = express();
const upload = multer({ dest: "uploads/" });

const s3 = new S3Client({
  region: "ap-southeast-1",
  credentials: {
    accessKeyId: "DO00F48D6G49TXRQ4JNK",
    secretAccessKey: "CiCSRYIxEv/wRzynv8NEGLElUJB0Rl0opqIXEZWp2WE",
  },
  endpoint: "https://sgp1.digitaloceanspaces.com",
});

const bucketName = "cocreate";

app.get("/api/storage/:path", async (req, res) => {
  const { path } = req.params;
  const { key } = req.query;

  const getParams = {
    Bucket: bucketName,
    Key: `${path}/${key}`,
  };

  try {
    const { Body } = await s3.send(new GetObjectCommand(getParams));
    Body.pipe(res);
  } catch (error) {
    res.status(500).json({ error: "Error fetching the file" });
  }
});

app.post("/api/storage/:path", upload.single("file"), async (req, res) => {
  const { path } = req.params;
  const { file } = req;

  const postParams = {
    Bucket: bucketName,
    Key: `${path}/${file.originalname}`,
    Body: file.stream,
  };

  try {
    await s3.send(new PutObjectCommand(postParams));
    res.status(200).json({ message: "File uploaded successfully" });
  } catch (error) {
    res.status(500).json({ error: "Error uploading the file" });
  }
});

app.delete("/api/storage/:path", async (req, res) => {
  const { path } = req.params;
  const { key } = req.query;

  const deleteParams = {
    Bucket: bucketName,
    Key: `${path}/${key}`,
  };

  try {
    await s3.send(new DeleteObjectCommand(deleteParams));
    res.status(200).json({ message: "File deleted successfully" });
  } catch (error) {
    res.status(500).json({ error: "Error deleting the file" });
  }
});

app.listen(3000, () => console.log("App listening on port 3000"));
